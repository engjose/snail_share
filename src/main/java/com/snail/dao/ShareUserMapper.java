package com.snail.dao;

import com.snail.pojo.domain.ShareUser;
import com.snail.pojo.domain.ShareUserExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface ShareUserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table share_user
     *
     * @mbggenerated
     */
    int countByExample(ShareUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table share_user
     *
     * @mbggenerated
     */
    int deleteByExample(ShareUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table share_user
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `share_user`",
        "where `id` = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table share_user
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `share_user` (`id`, `user_id`, ",
        "`share_id`, `option_type`, ",
        "`comment`, `creat_at`, ",
        "`update_at`)",
        "values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
        "#{shareId,jdbcType=INTEGER}, #{optionType,jdbcType=VARCHAR}, ",
        "#{comment,jdbcType=VARCHAR}, #{creatAt,jdbcType=TIMESTAMP}, ",
        "#{updateAt,jdbcType=TIMESTAMP})"
    })
    int insert(ShareUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table share_user
     *
     * @mbggenerated
     */
    int insertSelective(ShareUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table share_user
     *
     * @mbggenerated
     */
    List<ShareUser> selectByExample(ShareUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table share_user
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "`id`, `user_id`, `share_id`, `option_type`, `comment`, `creat_at`, `update_at`",
        "from `share_user`",
        "where `id` = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    ShareUser selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table share_user
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") ShareUser record, @Param("example") ShareUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table share_user
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") ShareUser record, @Param("example") ShareUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table share_user
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(ShareUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table share_user
     *
     * @mbggenerated
     */
    @Update({
        "update `share_user`",
        "set `user_id` = #{userId,jdbcType=INTEGER},",
          "`share_id` = #{shareId,jdbcType=INTEGER},",
          "`option_type` = #{optionType,jdbcType=VARCHAR},",
          "`comment` = #{comment,jdbcType=VARCHAR},",
          "`creat_at` = #{creatAt,jdbcType=TIMESTAMP},",
          "`update_at` = #{updateAt,jdbcType=TIMESTAMP}",
        "where `id` = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ShareUser record);
}